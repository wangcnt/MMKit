//
//  MMOperation.h
//  MMCoreServices
//
//  Created by Mark on 2018/1/22.
//  Copyright © 2018年 Mark. All rights reserved.
//

#import <Foundation/Foundation.h>

#import "MMCoreDefines.h"

@protocol MMRequest, MMSocketRequest, MMResponse, MMSessionManager, MMConnection, MMSessionConfiguration;
/**
 * start之前一定要准备好request, sessionConfiguration
 */
@protocol MMOperation <NSObject>

@property (nonatomic, strong) id<MMSessionConfiguration> configuration;
@property (nonatomic, strong) NSError *error;

@property (nonatomic, strong, readonly) id<MMRequest> request;  ///< Must be override by suboperation, & it's better in init method.
@property (nonatomic, strong, readonly) id<MMSessionManager> sessionManager;  ///< Must be override by suboperation, request won't be sent if nil.
@property (nonatomic, strong, readonly) id<MMResponse> response;   ///< Generated by connection.
@property (nonatomic, assign) NSTimeInterval timeoutInterval;   ///< default = 60s

@property (nonatomic, assign, readonly) double consumedTimestamp;

@property (nonatomic, assign) NSInteger maxRetryTimes;
@property (nonatomic, assign) NSInteger retryedTimes;

@property (nonatomic, strong) MMRequestStepHandler stepHandler;
@property (nonatomic, strong) MMRequestProgressHandler progressHandler;

- (void)willStart;  ///< At begining of NSOperation-start, you can make associations amoung configurations here to make sure that the real request can be made. MUST: [super willStart];

- (void)willSend;  ///< After -willStart and every state in current NSOperation is OK, I will send the current request to MMSessionManager to access to server, so you can do some AOP configurations for requests. Before -willSend, every request could prepare itself first with message MMRequest-prepare.

- (BOOL)shouldRetry;    ///< After -willSend, the request was sent to server yet, it takes some time to fetch data from server, when received, you can make a decision to retry the current request or continue the next request here with resetting the response and error to nil, if no need to retry, -loadFinished will be invoked. NO will be returned by default;

- (void)loadFinished;   ///< MUST: [super loadFinished] to finish current NSOperation.

@end

@protocol MMHTTPOperation <MMOperation>
@end

@protocol MMSocketOperation <MMOperation>
@required
@property (nonatomic, strong) NSString *connectionID; ///< MMSocketConnection's identifier. @see MMSocketConnectionType
@end


@interface MMOperation : NSOperation <MMOperation> {
    id<MMRequest> _request;
    MMRequestProgressHandler _progressHandler;
}
@end

@interface MMHTTPOperation : MMOperation <MMHTTPOperation>
@end

@interface MMSocketOperation : MMOperation <MMSocketOperation>
@end
